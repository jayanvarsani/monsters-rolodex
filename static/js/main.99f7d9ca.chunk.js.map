{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,uBACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDAtCd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZR,SAAU,GACVS,YAAa,IAGd,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBAPP,E,qDAUd,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAG7C,SAAaE,GACZC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGvC,WACC,MAAkCF,KAAKV,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZY,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACxCA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAEjD,OACC,sBAAK/B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAY,mBACZC,aAAcc,KAAKd,eAEpB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAjCNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99f7d9ca.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&180x180`}></img>\n        <h2>{props.monster.name}</h2>  \n        <p>{props.monster.email}</p>  \n    </div>\n);\n\n","import React from 'react'\nimport './card-list.styles.css'\nimport { Card } from '../card/card-component'\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n        {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster}/>\n\t\t))}\n    </div>\n)","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input\n        className='search'\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ searchField: e.target.value });\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"Find Monsters...\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}